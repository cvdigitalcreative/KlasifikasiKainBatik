/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package klasifikasikainbatik.Boundary;

import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import klasifikasikainbatik.Controller.HalamanUtamaManager;
import klasifikasikainbatik.Controller.NaiveBayesManager;
import klasifikasikainbatik.Controller.PraPengolahanManager;
import klasifikasikainbatik.Controller.UMIManager;
import klasifikasikainbatik.Entity.CitraModel;
import klasifikasikainbatik.Entity.SampelModel;

/**
 *
 * @author shaff
 */
public class HalamanUtama extends javax.swing.JFrame {
    private String file_path;
    private String input_type;
    private boolean state;
    private String file_name;
    private HalamanUtamaManager halaman_utama;
    private ArrayList<SampelModel[]> sampel_list;
    /**
     * Creates new form HalamanPelatihan
     */
    public HalamanUtama() {
        initComponents();
        halaman_utama = new HalamanUtamaManager();
        sampel_list = new ArrayList<>();
        state = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btn_proses_pelatihan = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_model_ciri = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        lbl_nama = new javax.swing.JLabel();
        hasil_klasifikasi = new javax.swing.JLabel();
        kelas_citra = new javax.swing.JLabel();
        kelas_klasifikasi = new javax.swing.JLabel();
        btn_muat_citra = new javax.swing.JButton();
        btn_klasifikasi = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_hasil_berkelompok = new javax.swing.JTable();
        tingkat_akurasi = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        jLabel1.setText("Pelatihan dan Klasifikasi Kain Batik");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Proses Pelatihan", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 1, 24))); // NOI18N

        btn_proses_pelatihan.setText("Proses Pelatihan");
        btn_proses_pelatihan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_proses_pelatihanActionPerformed(evt);
            }
        });

        tbl_model_ciri.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Nama Sampel", "Ciri 1", "Ciri 2", "Ciri 3", "Ciri 4", "Ciri 5", "Ciri 6", "Ciri 7", "Ciri 8"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_model_ciri);
        if (tbl_model_ciri.getColumnModel().getColumnCount() > 0) {
            tbl_model_ciri.getColumnModel().getColumn(5).setHeaderValue("Ciri 4");
            tbl_model_ciri.getColumnModel().getColumn(6).setHeaderValue("Ciri 5");
            tbl_model_ciri.getColumnModel().getColumn(7).setHeaderValue("Ciri 6");
            tbl_model_ciri.getColumnModel().getColumn(8).setHeaderValue("Ciri 7");
            tbl_model_ciri.getColumnModel().getColumn(9).setHeaderValue("Ciri 8");
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_proses_pelatihan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btn_proses_pelatihan, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Proses Pengujian", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 1, 24))); // NOI18N

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hasil Klasifikasi Individu", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 1, 20))); // NOI18N

        lbl_nama.setText("Nama Citra : ");

        hasil_klasifikasi.setText("Hasil Klasifikasi : ");

        kelas_citra.setText("Kelas Citra : ");

        kelas_klasifikasi.setText("Kelas Klasifikasi : ");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_nama)
                    .addComponent(hasil_klasifikasi)
                    .addComponent(kelas_citra)
                    .addComponent(kelas_klasifikasi))
                .addContainerGap(184, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_nama)
                .addGap(26, 26, 26)
                .addComponent(kelas_citra)
                .addGap(26, 26, 26)
                .addComponent(kelas_klasifikasi)
                .addGap(27, 27, 27)
                .addComponent(hasil_klasifikasi)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btn_muat_citra.setText("Muat File/Folder Citra Batik");
        btn_muat_citra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_muat_citraActionPerformed(evt);
            }
        });

        btn_klasifikasi.setText("Klasifikasi Citra Batik");
        btn_klasifikasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_klasifikasiActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hasil Klasifikasi Berkelompok", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 1, 20))); // NOI18N

        tbl_hasil_berkelompok.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Nama Sampel", "Kelas Awal", "Kelas Klasifikasi", "Hasil Klasifikasi"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbl_hasil_berkelompok);

        tingkat_akurasi.setText("Tingkat Akurasi : ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(tingkat_akurasi)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 601, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(tingkat_akurasi)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btn_muat_citra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(34, 34, 34)
                        .addComponent(btn_klasifikasi, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_klasifikasi, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_muat_citra, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(365, 365, 365)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_proses_pelatihanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_proses_pelatihanActionPerformed
        // TODO add your handling code here:
        double[][] m_hu_moment, m_united_moment;
        int i,j;
        String[] sampel_name;
        SampelModel[] sampel;
        CitraModel[] citra_gray, citra_sobel;
        
        halaman_utama = new HalamanUtamaManager();
        
        file_path = "C:\\Users\\shaff\\OneDrive\\Documents\\NetBeansProjects\\KlasifikasiKainBatik\\datalatih\\seluruh";
        halaman_utama.do_prapengolahan("Pelatihan", file_path);
        citra_sobel = halaman_utama.get_citrasobel();
        sampel_name = halaman_utama.get_daftarnamasampel();
        
        halaman_utama.do_ekstraksiciri("Pelatihan");
        m_united_moment = halaman_utama.get_m_unitedmoment();
        
        sampel = setSampel(m_united_moment, sampel_name, citra_sobel);
        
        DefaultTableModel hasil_ciri_model = (DefaultTableModel) tbl_model_ciri.getModel();
        String[] row = new String[10];

        for(i=tbl_model_ciri.getRowCount()-1; i>=0; i--){
            hasil_ciri_model.removeRow(i);
        }
        
        for(i=0; i<sampel.length; i++){
            row[0] = String.valueOf((i+1));
            row[1] = sampel[i].getNamaSampel();
            row[2] = String.valueOf(sampel[i].getCiriSampel()[0]);
            row[3] = String.valueOf(sampel[i].getCiriSampel()[1]);
            row[4] = String.valueOf(sampel[i].getCiriSampel()[2]);
            row[5] = String.valueOf(sampel[i].getCiriSampel()[3]);
            row[6] = String.valueOf(sampel[i].getCiriSampel()[4]);
            row[7] = String.valueOf(sampel[i].getCiriSampel()[5]);
            row[8] = String.valueOf(sampel[i].getCiriSampel()[6]);
            row[9] = String.valueOf(sampel[i].getCiriSampel()[7]);
            hasil_ciri_model.addRow(row);
        }
            
        halaman_utama.simpan_modelciri(sampel);
        
        JOptionPane.showMessageDialog(this, "Proses Pelatihan berhasil dilakukan");
    }//GEN-LAST:event_btn_proses_pelatihanActionPerformed

    private void btn_klasifikasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_klasifikasiActionPerformed
        // TODO add your handling code here:
        int i,j, index_kelas;
        int[] multi_index_kelas;
        double prob_prior, prob_likehood, prob_posterior, max_prob, akurasi, sum;
        double[] mean, standar_deviasi, m_united_moment;
        double[][] m_hu_moment, m_united_moment_temp, multi_m_united_moment;
        String nama_sampel;
        String[] multi_nama_sampel;
        CitraModel citra_gray, citra_sobel;
        CitraModel[] multi_citra_sobel;
        SampelModel[] sampel;
        
        halaman_utama = new HalamanUtamaManager();
        
        if(input_type.equals("directory")){
            halaman_utama.do_prapengolahan("Multi Klasifikasi", file_path);
            multi_citra_sobel = halaman_utama.get_citrasobel();
            multi_nama_sampel = halaman_utama.get_daftarnamasampel();

            halaman_utama.do_ekstraksiciri("Multi Klasifikasi");
            multi_m_united_moment = halaman_utama.get_m_unitedmoment();

            sampel = halaman_utama.get_modelciri();
            sampel_list = halaman_utama.get_sampellist(sampel);
            
            multi_index_kelas = new int[multi_m_united_moment.length];
            
            DefaultTableModel hasil_klasifikasi_model = (DefaultTableModel) tbl_hasil_berkelompok.getModel();
            String[] row = new String[5];

            for(i=tbl_hasil_berkelompok.getRowCount()-1; i>=0; i--){
                hasil_klasifikasi_model.removeRow(i);
            }
            
            sum = 0;
            for(i=0; i<multi_m_united_moment.length; i++){
                halaman_utama.do_klasifikasi(sampel_list , multi_m_united_moment[i], multi_citra_sobel[i]);
                multi_index_kelas[i] = halaman_utama.get_indexkelas();
                
                row[0] = String.valueOf((i+1));
                row[1] = multi_nama_sampel[i];
                row[2] = multi_citra_sobel[i].getKelasCitra();
                row[3] = sampel_list.get(multi_index_kelas[i])[0].getKelasSampel();

                if(row[2].equals(row[3])){
                    row[4] = "Citra Batik Dikenali";
                }
                else{
                    row[4] = "Citra Batik Tidak Dikenali";
                }

                hasil_klasifikasi_model.addRow(row);
                
                if(row[2].equals(row[3])){
                    sum += 1;
                }
            }
            
            akurasi = (sum/multi_m_united_moment.length)*100;
            tingkat_akurasi.setText("Tingkat Akurasi : "+akurasi+"%");
        }
        else{
            halaman_utama.do_prapengolahan("Klasifikasi", file_path);
            citra_gray = halaman_utama.get_citragrayklasifikasi();
            citra_sobel = halaman_utama.get_citrasobelklasifikasi();
            nama_sampel = halaman_utama.get_namasampelklasifikasi();
            System.out.println("Perhitungan pra-pengolahan sudah selesai");

            halaman_utama.do_ekstraksiciri("Klasifikasi");
            m_united_moment_temp = halaman_utama.get_m_unitedmoment();
            System.out.println("Perhitungan ekstraksi ciri sudah selesai");

            m_united_moment = new double[8];
            for(i=0; i<m_united_moment_temp[0].length; i++){
                m_united_moment[i] = m_united_moment_temp[0][i];
            }

            sampel = halaman_utama.get_modelciri();
            sampel_list = halaman_utama.get_sampellist(sampel);
            halaman_utama.do_klasifikasi(sampel_list , m_united_moment, citra_sobel);
            index_kelas = halaman_utama.get_indexkelas();

            lbl_nama.setText("Nama Citra Batik : "+nama_sampel);
            kelas_citra.setText("Kelas Citra Batik : "+citra_sobel.getKelasCitra());
            kelas_citra.setText("Kelas Klasifikasi Batik : "+sampel_list.get(index_kelas)[0].getKelasSampel());
            
            if(citra_sobel.getKelasCitra().equals(sampel_list.get(index_kelas)[0].getKelasSampel())){
                hasil_klasifikasi.setText("Hasil Klasifikasi Batik : Citra Batik berhasil dikenali");
            }
            else{
                hasil_klasifikasi.setText("Hasil Klasifikasi Batik : Citra Batik gagal dikenali");
            }
        }
        
        JOptionPane.showMessageDialog(this, "Proses klasifikasi berhasil dilakukan");
    }//GEN-LAST:event_btn_klasifikasiActionPerformed

    private void btn_muat_citraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_muat_citraActionPerformed
        // TODO add your handling code here:
        BufferedImage imageInput = null;
        BufferedImage scaleImage;
        String[] ext_file;
        JFileChooser fileChooser;
        int status;
        
        if(halaman_utama.isDataKosong() == 1){
            JOptionPane.showMessageDialog(this, "Maaf, anda harus melakukan pelatihan terlebih dahulu");
        }
        else{
            fileChooser = new JFileChooser();
            fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            int result = fileChooser.showOpenDialog(this);
            
            if(result == JFileChooser.APPROVE_OPTION) {
                File selectedFile = fileChooser.getSelectedFile();
                
                if(selectedFile.isDirectory()){
                    input_type = "directory";
                    file_path = selectedFile.getAbsolutePath();
                    System.out.println("Selected folder : " + selectedFile.getAbsolutePath());
                    JOptionPane.showMessageDialog(this, "Folder citra berhasil dimuat.");
                }
                else{
                    input_type = "file";
                    file_path = selectedFile.getAbsolutePath();
                    System.out.println("Selected file : " + selectedFile.getAbsolutePath());
                    file_name = selectedFile.getName();

                    File direktori = new File(file_path);

                    try {
                        imageInput = ImageIO.read(direktori);
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(this, "Maaf, anda gagal memuat citra uji");
                    }
                    
                    scaleImage = resize(imageInput, 250, 250);            
//                    img_citra.setIcon(new ImageIcon(scaleImage)); 

                    JOptionPane.showMessageDialog(this, "File citra berhasil dimuat.");
                }
                
                state = true;
            }
        }
    }//GEN-LAST:event_btn_muat_citraActionPerformed

    private static BufferedImage resize(BufferedImage img, int height, int width) {
        Image tmp = img.getScaledInstance(width, height, Image.SCALE_SMOOTH);
        BufferedImage resized = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
        Graphics2D g2d = resized.createGraphics();
        g2d.drawImage(tmp, 0, 0, null);
        g2d.dispose();
        return resized;
    }
    
    public SampelModel[] setSampel(double[][] ciri, String[] sampel_name, CitraModel[] citra){
        int i, j;
        String kelas;
        SampelModel[] sampel_temp;
        
        sampel_temp = new SampelModel[citra.length];
        
        for(i=0; i<sampel_temp.length; i++){
            sampel_temp[i] = new SampelModel();
            sampel_temp[i].setNamaSampel(sampel_name[i]);
            
            kelas = citra[i].getKelasCitra();
            sampel_temp[i].setKelasSampel(kelas);
            
            sampel_temp[i].setCiriSampel(ciri[i]);
        }
        
        System.out.println("Sampel berhasil dibuat");
        
        return sampel_temp;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HalamanUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HalamanUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HalamanUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HalamanUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HalamanUtama().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_klasifikasi;
    private javax.swing.JButton btn_muat_citra;
    private javax.swing.JButton btn_proses_pelatihan;
    private javax.swing.JLabel hasil_klasifikasi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel kelas_citra;
    private javax.swing.JLabel kelas_klasifikasi;
    private javax.swing.JLabel lbl_nama;
    private javax.swing.JTable tbl_hasil_berkelompok;
    private javax.swing.JTable tbl_model_ciri;
    private javax.swing.JLabel tingkat_akurasi;
    // End of variables declaration//GEN-END:variables
}
